name: Automated Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Browser Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Start HTTP server
        run: |
          cd ${{ github.workspace }}
          python3 -m http.server 8080 &
          sleep 2
          echo "Server started on port 8080"
      
      - name: Setup Node.js for Playwright
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Playwright
        run: |
          npm init -y
          npm install -D @playwright/test
          npx playwright install chromium
      
      - name: Create Playwright test
        run: |
          cat > playwright.config.js << 'EOF'
          module.exports = {
            testDir: './playwright-tests',
            timeout: 30000,
            use: {
              baseURL: 'http://localhost:8080',
              headless: true,
            },
          };
          EOF
          
          mkdir -p playwright-tests
          cat > playwright-tests/test-runner.spec.js << 'EOF'
          const { test, expect } = require('@playwright/test');

          test('OrarioDoc automated tests', async ({ page }) => {
            // Navigate to test runner
            await page.goto('/tests/test-runner.html');
            
            // Wait for page to load
            await page.waitForLoadState('domcontentloaded');
            
            // Click run tests button
            await page.click('#run-tests');
            
            // Wait for tests to complete (status shows success or failed)
            await page.waitForSelector('.status.success, .status.failed', { timeout: 30000 });
            
            // Get test statistics
            const stats = await page.evaluate(() => {
              return {
                total: parseInt(document.getElementById('stat-total').textContent),
                passed: parseInt(document.getElementById('stat-passed').textContent),
                failed: parseInt(document.getElementById('stat-failed').textContent),
                skipped: parseInt(document.getElementById('stat-skipped').textContent)
              };
            });
            
            console.log('Test Results:', stats);
            
            // Get status message
            const status = await page.locator('#status').textContent();
            console.log('Status:', status);
            
            // Take screenshot
            await page.screenshot({ path: 'test-results.png', fullPage: true });
            
            // Assert all tests passed
            expect(stats.failed).toBe(0);
            expect(stats.passed).toBeGreaterThan(0);
          });
          EOF
      
      - name: Run Playwright tests
        run: npx playwright test
      
      - name: Upload test results screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.png
          retention-days: 30
      
      - name: Test Summary
        if: always()
        run: |
          echo "## Test Results ðŸ§ª" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Test runner executed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View the test results screenshot in the artifacts." >> $GITHUB_STEP_SUMMARY
