name: Automated Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  actions: read
  pull-requests: write

jobs:
  test:
    name: Run Browser Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Start HTTP server
        run: |
          cd ${{ github.workspace }}
          python3 -m http.server 8080 &
          sleep 2
          echo "Server started on port 8080"

      - name: Setup Node.js for Playwright
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright and browser deps
        run: |
          npm init -y
          npm install -D @playwright/test
          npx playwright install --with-deps

      - name: Ensure committed Playwright test is used and server healthy
        run: |
          mkdir -p playwright-tests
          # Verify test-runner page is available (retry up to 10s)
          for i in {1..10}; do
            if curl -sSf http://127.0.0.1:8080/tests/test-runner.html >/dev/null; then
              echo "test-runner.html available"
              break
            fi
            echo "Waiting for test-runner.html... ($i)"
            sleep 1
          done
          curl -sSf http://127.0.0.1:8080/tests/test-runner.html >/dev/null || (echo "test-runner.html not available" && exit 1)

      - name: Run Playwright tests
        run: |
          # Run committed tests; produce JSON report too for artifacts
          npx playwright test --reporter=json > test-results.json || true

      - name: Upload test results artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/**
          retention-days: 30

      - name: Test Summary
        if: always()
        run: |
          echo "## Test Results ðŸ§ª" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Test runner executed. View the test results artifacts." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts: test-results.json, test-results.png, test-failure-debug.png, test-runner.html, and page-console.log" >> $GITHUB_STEP_SUMMARY
